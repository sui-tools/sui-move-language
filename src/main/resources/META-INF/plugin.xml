<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <id>com.suimove.lang</id>
    <name>Move Language for Sui</name>
    <vendor email="support@sui-move.com" url="https://github.com/sui-tools/sui-move-language">Sui Move</vendor>

    <depends>com.intellij.modules.platform</depends>

    <resource-bundle>messages.MoveBundle</resource-bundle>

    <extensions defaultExtensionNs="com.intellij">
        <!-- File Type -->
        <fileType
                name="Move"
                implementationClass="com.suimove.intellij.MoveFileType"
                language="Move"
                extensions="move"/>

        <!-- Language -->
        <lang.parserDefinition
                language="Move"
                implementationClass="com.suimove.intellij.parser.MoveParserDefinition"/>

        <!-- Syntax Highlighter -->
        <lang.syntaxHighlighterFactory
                language="Move"
                implementationClass="com.suimove.intellij.highlighting.MoveSyntaxHighlighterFactory"/>

        <!-- Color Settings Page -->
        <colorSettingsPage
                implementation="com.suimove.intellij.highlighting.MoveColorSettingsPage"/>

        <!-- Annotator -->
        <annotator
                language="Move"
                implementationClass="com.suimove.intellij.annotator.MoveAnnotator"/>

        <!-- Code Completion -->
        <completion.contributor
                language="Move"
                implementationClass="com.suimove.intellij.completion.MoveCompletionContributor"/>

        <!-- Brace Matcher -->
        <lang.braceMatcher
                language="Move"
                implementationClass="com.suimove.intellij.MoveBraceMatcher"/>

        <!-- Quote Handler -->
        <lang.quoteHandler
                language="Move"
                implementationClass="com.suimove.intellij.MoveQuoteHandler"/>

        <!-- Commenter -->
        <lang.commenter
                language="Move"
                implementationClass="com.suimove.intellij.MoveCommenter"/>

        <!-- Structure View -->
        <lang.psiStructureViewFactory
                language="Move"
                implementationClass="com.suimove.intellij.structure.MoveStructureViewFactory"/>

        <!-- Formatter -->
        <lang.formatter
                language="Move"
                implementationClass="com.suimove.intellij.formatter.MoveFormattingModelBuilder"/>

        <!-- Code Style Settings -->
        <codeStyleSettingsProvider
                implementation="com.suimove.intellij.formatter.MoveCodeStyleSettingsProvider"/>
        <langCodeStyleSettingsProvider
                implementation="com.suimove.intellij.formatter.MoveLanguageCodeStyleSettingsProvider"/>

        <!-- Reference and Navigation -->
        <psi.referenceContributor language="Move" 
                                  implementation="com.suimove.intellij.psi.MoveReferenceContributor"/>
        
        <lang.findUsagesProvider language="Move"
                                 implementation="com.suimove.intellij.findusages.MoveFindUsagesProvider"/>
        <gotoDeclarationHandler implementation="com.suimove.intellij.navigation.MoveGotoDeclarationHandler"/>
        
        <!-- Refactoring -->
        <lang.refactoringSupport language="Move"
                                 implementation="com.suimove.intellij.refactoring.MoveRefactoringSupportProvider"/>
        <lang.namesValidator language="Move"
                             implementation="com.suimove.intellij.refactoring.MoveNamesValidator"/>
        
        <!-- Inspections -->
        <localInspection language="Move"
                         shortName="MoveUnusedVariable"
                         displayName="Unused variable"
                         groupName="Move"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="com.suimove.intellij.inspections.MoveUnusedVariableInspection"/>
        
        <localInspection language="Move"
                         shortName="MoveNamingConvention"
                         displayName="Naming convention violations"
                         groupName="Move"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="com.suimove.intellij.inspections.MoveNamingConventionInspection"/>
        
        <localInspection language="Move"
                         shortName="SuiObjectRequirements"
                         displayName="Sui object requirements"
                         groupName="Sui"
                         enabledByDefault="true"
                         level="ERROR"
                         implementationClass="com.suimove.intellij.inspections.SuiObjectInspection"/>
        
        <localInspection language="Move"
                         shortName="SuiEntryFunction"
                         displayName="Sui entry function requirements"
                         groupName="Sui"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="com.suimove.intellij.inspections.SuiEntryFunctionInspection"/>
        
        <!-- Quick Fixes -->
        <localInspection language="Move" 
                        implementationClass="com.suimove.intellij.quickfix.AddUidFieldQuickFix"
                        displayName="Add UID field quick fix"
                        groupName="Sui"
                        enabledByDefault="true"
                        level="ERROR"/>
        
        <localInspection language="Move" 
                        implementationClass="com.suimove.intellij.quickfix.AddTxContextParameterQuickFix"
                        displayName="Add TxContext parameter quick fix"
                        groupName="Sui"
                        enabledByDefault="true"
                        level="ERROR"/>
        
        <!-- Test Runner -->
        <configurationType implementation="com.suimove.intellij.testing.MoveTestRunConfigurationType"/>
        
        <runLineMarkerContributor language="Move" 
                                 implementationClass="com.suimove.intellij.testing.MoveTestLineMarkerProvider"/>
        
        <codeInsight.lineMarkerProvider language="Move"
                                       implementationClass="com.suimove.intellij.testing.MoveTestModuleLineMarkerProvider"/>
        
        <testFinder implementation="com.suimove.intellij.testing.MoveTestFinder"/>
        
        <testFramework implementation="com.suimove.intellij.testing.MoveTestFramework"/>
        
        <!-- Refactoring -->
        <refactoring.extractMethodHandler 
                language="Move"
                implementationClass="com.suimove.intellij.refactoring.MoveExtractFunctionHandler"/>
        
        <refactoring.inlineHandler
                language="Move"
                implementationClass="com.suimove.intellij.refactoring.MoveInlineFunctionHandler"/>
        
        <refactoring.inlineHandler
                language="Move" 
                implementationClass="com.suimove.intellij.refactoring.MoveInlineVariableHandler"/>
        
        <renameHandler
                implementation="com.suimove.intellij.refactoring.MoveRenameHandler"
                order="first"/>
        
        <renamePsiElementProcessor
                implementation="com.suimove.intellij.refactoring.MoveRenamePsiElementProcessor"/>
        
        <!-- Debugger -->
        <programRunner 
                implementation="com.suimove.intellij.debugger.MoveDebuggerRunner"
                order="first"/>
        
        <xdebugger.breakpointType
                implementation="com.suimove.intellij.debugger.MoveLineBreakpointType"/>
        
        <xdebugger.settings
                implementation="com.suimove.intellij.debugger.MoveDebuggerSettings"/>
        
        <!-- Type System Annotator -->
        <annotator
                language="Move"
                implementationClass="com.suimove.intellij.annotator.MoveTypeAnnotator"
                order="after MoveAnnotator"/>
        
        <!-- Services -->
        <projectService serviceImplementation="com.suimove.intellij.services.type.MoveTypeInferenceEngine"/>
        <projectService serviceImplementation="com.suimove.intellij.services.type.MoveTypeCache"/>
        <projectService serviceImplementation="com.suimove.intellij.services.sui.SuiFrameworkLibrary"/>
        <projectService serviceImplementation="com.suimove.intellij.cli.SuiCliService"/>
        
        <!-- Stub Indexes -->
        <stubIndex implementation="com.suimove.intellij.stubs.MoveModuleIndex"/>
        
        <!-- Postfix Templates -->
        <postfixTemplateProvider language="Move"
                                 implementationClass="com.suimove.intellij.completion.MovePostfixTemplateProvider"/>
        
        <!-- Intentions -->
        <intentionAction>
            <className>com.suimove.intellij.intentions.MoveAddTypeAnnotationIntention</className>
            <category>Move/Type annotations</category>
        </intentionAction>
        
        <intentionAction>
            <className>com.suimove.intellij.intentions.MoveConvertToPublicIntention</className>
            <category>Move/Visibility</category>
        </intentionAction>
        
        <!-- Live Templates -->
        <liveTemplateContext implementation="com.suimove.intellij.templates.MoveTemplateContextType"
                           contextId="MOVE"/>
        <defaultLiveTemplates file="/liveTemplates/Move.xml"/>
        
        <!-- File Templates -->
        <fileTemplateGroup implementation="com.suimove.intellij.templates.MoveFileTemplateProvider"/>
        
        <!-- Settings -->
        <applicationConfigurable
                parentId="tools"
                instance="com.suimove.intellij.settings.MoveSettingsConfigurable"
                id="com.suimove.intellij.settings"
                displayName="Sui Move"/>

        <!-- Tool Window -->
        <toolWindow
                id="Sui Move"
                secondary="true"
                icon="/icons/move.svg"
                anchor="right"
                factoryClass="com.suimove.intellij.toolwindow.MoveToolWindowFactory"/>
        
        <toolWindow id="Move Tests"
                    icon="MoveIcons.TEST_FUNCTION"
                    anchor="bottom"
                    factoryClass="com.intellij.execution.testframework.ToolWindowTestsFactory"/>
                
        <!-- Notification Group -->
        <notificationGroup
                id="Sui Move"
                displayType="BALLOON" />
                
        <!-- Project Service -->
        <projectService serviceImplementation="com.suimove.intellij.compiler.MoveCompilerService"/>
        
        <!-- Application Service -->
        <applicationService serviceImplementation="com.suimove.intellij.settings.MoveSettings"/>
        
        <!-- Type System Services -->
        <applicationService serviceImplementation="com.suimove.intellij.services.MoveTypeCache"/>
        <projectService serviceImplementation="com.suimove.intellij.services.MoveTypeInferenceEngine"/>
        
        <!-- Optimized Services -->
        <projectService serviceImplementation="com.suimove.intellij.services.type.MoveTypeCacheOptimized"/>
        <projectService serviceImplementation="com.suimove.intellij.services.type.MoveTypeInferenceOptimized"/>
        <projectService serviceImplementation="com.suimove.intellij.performance.MovePerformanceMonitor"/>
        
        <!-- Sui Framework Service -->
        <applicationService serviceImplementation="com.suimove.intellij.services.SuiFrameworkLibrary"/>
        
        <!-- Sui CLI Service -->
        <applicationService serviceImplementation="com.suimove.intellij.cli.SuiCliService"/>
    </extensions>

    <actions>
        <!-- Add your actions here -->
        <action id="Move.NewMoveFile"
                class="com.suimove.intellij.actions.CreateMoveFileAction"
                text="Move File"
                description="Create new Move file">
            <add-to-group group-id="NewGroup" anchor="after" relative-to-action="NewFile"/>
        </action>

        <group id="Move.ToolsMenu"
               text="Sui Move"
               popup="true">
            <add-to-group group-id="ToolsMenu" anchor="last"/>
            
            <action id="Move.Build"
                    class="com.suimove.intellij.actions.MoveBuildAction"
                    text="Build Project"
                    description="Build Move project"/>
            
            <action id="Move.Test"
                    class="com.suimove.intellij.actions.MoveTestAction"
                    text="Run Tests"
                    description="Run Move tests"/>
            
            <action id="Move.Deploy"
                    class="com.suimove.intellij.actions.MoveDeployAction"
                    text="Deploy"
                    description="Deploy Move modules"/>
        </group>
        
        <action id="Move.RunTest" 
                class="com.suimove.intellij.testing.MoveRunTestAction"
                text="Run Move Test"
                description="Run Move test at caret">
            <add-to-group group-id="RunContextGroup" anchor="first"/>
        </action>
        
        <action id="Move.DebugTest"
                class="com.suimove.intellij.testing.MoveDebugTestAction"
                text="Debug Move Test"
                description="Debug Move test at caret">
            <add-to-group group-id="RunContextGroup" anchor="after" relative-to-action="Move.RunTest"/>
        </action>
        
        <!-- Refactoring Actions -->
        <action id="Move.ExtractFunction"
                class="com.intellij.refactoring.actions.ExtractMethodAction"
                text="Extract Function..."
                description="Extract selected code into a new function">
            <add-to-group group-id="RefactoringMenu" anchor="after" relative-to-action="ExtractMethod"/>
        </action>
        
        <action id="Move.InlineFunction"
                class="com.intellij.refactoring.actions.InlineAction"
                text="Inline Function..."
                description="Inline function at caret">
            <add-to-group group-id="RefactoringMenu" anchor="after" relative-to-action="Inline"/>
        </action>
        
        <action id="Move.Rename"
                class="com.intellij.refactoring.actions.RenameElementAction"
                text="Rename..."
                description="Rename Move element">
            <add-to-group group-id="RefactoringMenu" anchor="first"/>
        </action>
    </actions>
</idea-plugin>
